let m,p,ls,lss,sp,d,t,c,s,sl,op,i,e,z,val,id,text,name,parent,id2,ns;const ns_cache = [];const name_cache = [];const nodes = [document.getElementById("main")];
    export function get_node(id){
        return nodes[id];
    }export function create(r){d=r;c=new TextDecoder('utf-8',{fatal:true})}export function run_from_buffer(b){m=new DataView(b.buffer,b.byteOffset,b.byteLength);d=b.length-13;if(!c){c=new TextDecoder('utf-8',{fatal: true})}run();}export function update_memory(b){m=new DataView(b.buffer)}export function run(){t=m.getUint8(d,true);if(t&1){ls=m.getUint32(d+1,true)}p=ls;if(t&2){lss=m.getUint32(d+5,true)}if(t&4){sl=m.getUint32(d+9,true);if(t&8){sp=lss;s="";e=sp+(sl/4|0)*4;while(sp<e){t=m.getUint32(sp,true);s+=String.fromCharCode(t&255,(t&65280)>>8,(t&16711680)>>16,t>>24);sp+=4}while(sp<lss+sl){s+=String.fromCharCode(m.getUint8(sp++));}}else{s=c.decode(new DataView(m.buffer,lss,sl))}sp=0}for(;;){op=m.getUint32(p,true);p+=4;z=0;while(z++<8){switch(op&15){case 0:i=m.getUint16(p,true);p += 2;if((i&128)!=0){name=s.substring(sp,sp+=i>>>8);name_cache[i&127]=name;}else{name=name_cache[i&127];}nodes[m.getUint32(p,true)]=document.createElement(name);p+=4;break;case 1:i=m.getUint32(p,true);p += 4;if((i&128)!=0){ns=s.substring(sp,sp+=(i>>>8)&255);ns_cache[i&127]=ns;}else{ns=ns_cache[i&127];}if((i&8388608)!=0){name=s.substring(sp,sp+=i>>>24);name_cache[(i>>>16)&127]=name;}else{name=name_cache[(i>>>16)&127];}nodes[m.getUint32(p,true)]=document.createElementNS(ns,name);p+=4;break;case 2:id=m.getUint32(p,true);p += 4;nodes[id]=document.createTextNode(s.substring(sp,sp+=m.getUint32(p,true)));p+=4;break;case 3:i=m.getUint16(p,true);p += 2;if((i&128)!=0){name=s.substring(sp,sp+=i>>>8);name_cache[i&127]=name;}else{name=name_cache[i&127];}id=m.getUint32(p,true);p += 4;nodes[id].style[name]=s.substring(sp,sp+=m.getUint32(p,true));p+=4;break;case 4:i=m.getUint16(p,true);p += 2;if((i&128)!=0){name=s.substring(sp,sp+=i>>>8);name_cache[i&127]=name;}else{name=name_cache[i&127];}id=m.getUint32(p,true);p += 4;nodes[id].setAttribute(name,s.substring(sp,sp+=m.getUint32(p,true)));p+=4;break;case 5:i=m.getUint16(p,true);p += 2;if((i&128)!=0){name=s.substring(sp,sp+=i>>>8);name_cache[i&127]=name;}else{name=name_cache[i&127];}nodes[m.getUint32(p,true)].removeAttribute(name);p+=4;break;case 6:id=m.getUint32(p,true);p += 4;nodes[id].appendChild(nodes[m.getUint32(p,true)]);p+=4;break;case 7:parent=m.getUint32(p,true);p += 4;id=m.getUint32(p,true);p += 4;nodes[parent].insertBefore(nodes[id],nodes[m.getUint32(p,true)]);p+=4;break;case 8:id=m.getUint32(p,true);p += 4;nodes[id].textContent=s.substring(sp,sp+=m.getUint32(p,true));p+=4;break;case 9:nodes[m.getUint32(p,true)].remove();p+=4;break;case 10:id=m.getUint32(p,true);p += 4;nodes[id].replaceWith(nodes[m.getUint32(p,true)]);p+=4;break;case 11:id=m.getUint32(p,true);p += 4;nodes[m.getUint32(p,true)]=nodes[id].cloneNode(true);p+=4;break;case 12:i=m.getUint32(p,true);id=i;nodes[id]=nodes[id].firstChild;p+=4;break;case 13:i=m.getUint32(p,true);id=i;nodes[id]=nodes[id].nextSibling;p+=4;break;case 14:id=m.getUint32(p,true);p += 4;i=m.getUint32(p,true);id2=i;nodes[id2]=nodes[id];p+=4;break;case 15:return true;}op>>>=4;}}}